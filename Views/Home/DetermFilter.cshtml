
<form id="filterForm" class="m-3">
    <div class="row d-flex justify-content-center ml-3 mr-3">
        <div class="col-4 mb-3">
            <label for="fromDate">From Date</label>
            <input type="text" class="form-control datepicker w-75" id="fromDate" name="fromDate" />
            <span id="dateFromError" class="text-danger"></span>
        </div>
        <div class="col-4 mb-3">
            <label for="toDate">To Date</label>
            <input type="text" class="form-control datepicker w-75" id="toDate" name="toDate" />
        </div>
        <div class="col-4 mb-3">
            <label for="count">Post Count</label>
            <input type="text" class="form-control w-auto" id="count" name="count" />
            <span id="countError" class="text-danger"></span>
        </div>
    </div>
    <div class="row d-flex justify-content-center ml-3 mr-3">
        <div class="col-2 mb-3">
            <label for="group">Group</label>
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="groupDropdown"
                        data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                </button>
                <div class="dropdown-menu" aria-labelledby="groupDropdown">
                    <a class="dropdown-item group" href="#" data-bs-value="DFL">DFL</a>
                    <a class="dropdown-item group" href="#" data-bs-value="EPL">EPL</a>
                    <a class="dropdown-item group" href="#" data-bs-value="Bundesliga 1">Bundesliga 1</a>
                    <a class="dropdown-item group" href="#" data-bs-value="Bundesliga 2">Bundesliga 2</a>
                </div>
            </div>
            <input type="hidden" id="group" name="group" value="DFL" />
        </div>
        <div class="col-2 mb-3">
            <label for="tag" class="tag">Tag</label>
            <div class="form-check p-2 tag">
                <input class="form-check-input" type="checkbox" id="tag">
                <label class="form-check-label" for="tag">
                    DFL/EPL YES
                </label>
            </div>
        </div>
        <div class="col-4 mb-3">
            <label for="keyword">Broadcaster/Club</label>
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="keywordDropdown"
                        data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Select Keyword
                </button>
                <div class="dropdown-menu" aria-labelledby="keywordDropdown">
                </div>
            </div>
            <input type="hidden" id="keyword" name="keyword" value="0" />

        </div>
        <div class="col-4 mb-3 d-flex align-items-end justify-content-center">
            <button type="button" class="btn btn-primary" style="background: #0176ac;" onclick="validateAndUpdateTables()">Apply Filters</button>
        </div>
    </div>
</form>

<script>
    $(document).ready(function () {
        var twoWeeksAgo = new Date();
        var today = new Date();
        twoWeeksAgo.setDate(twoWeeksAgo.getDate() - 14);

        $('.datepicker').datepicker({
            format: 'yyyy-mm-dd',
            autoclose: true
        });
        $('#fromDate').datepicker('setDate', twoWeeksAgo);
        $('#toDate').datepicker('setDate', today);
        $('#count').val(100);

        $('#groupDropdown').text($('#group').val());

        bindGroups();
        bindTagToggle();
    });



    function bindGroups() {
        $('.group').on('click', function () {
            var selectedValue = $(this).data('bs-value');
            $('#groupDropdown').text(selectedValue);
            $('#group').val(selectedValue);
            $("#group").trigger("change");
        });

        $('#group').change(function () {
            var newGroupValue = $(this).val();
            var groupId = getGroupId(newGroupValue);
            showHideTag(groupId);
            updateKeywordDropdownBasedOnGroup(groupId);
        });

        $("#group").trigger("change");
    }

    function bindTagToggle() {
        $('#tag').on('click', function() {
            if ($(this).is(":checked")) {
                $('#count').val(10);
            }
        });
    }

    function showHideTag(groupId) {
        if (groupId === groupIdMapping.DFL || groupId === groupIdMapping.EPL) {
            $('.tag').show();
        } else {
            $('.tag').hide();
            $('#tag').prop('checked', false);
        }
    }

    function updateKeywordDropdownBasedOnGroup(groupId) {
        console.log(`Calling /TabContent/Keywords for ${groupId}`);
        $.ajax({
            url: '/TabContent/Keywords',
            method: 'GET',
            data: { groupId: groupId },
            success: function (response) {
                updateKeywordDropdown(response);
            },
            error: function () {
                // Handle error if needed
            }
        });
    }

    function updateKeywordDropdown(keywords) {
        var dropdownMenu = $("#keywordDropdown").next(".dropdown-menu");
        dropdownMenu.empty();
        $('#keyword').val(0);


        var maxHeight = 200;
        dropdownMenu.css({
            'max-height': maxHeight + 'px',
            'overflow-y': 'auto'
        });

        // Add default option to the dropdown menu
        dropdownMenu.append('<a class="dropdown-item keyword" href="#" data-bs-value="0">All Broadcasters/Clubs</a>');

        // Add other options to the dropdown menu
        $.each(keywords, function (index, keyword) {
            dropdownMenu.append(`<a class="dropdown-item keyword" href="#" data-bs-value="${keyword.id}" data-bs-name="${keyword.name}">${keyword.name}</a>`);
        });

        $('#keywordDropdown').text('All Broadcasters/Clubs');

        $('.keyword').on('click', function () {
            var selectedKeyword = $(this).data('bs-name');
            var selectedKeywordId = $(this).data('bs-value');
            console.log(`keyword ${selectedKeyword} click`);
            $('#keywordDropdown').text(selectedKeyword);
            $('#keyword').val(selectedKeywordId);
        });
    }

    function validateAndUpdateTables() {
        $('#countError').text('');
        $('#dateFromError').text('');

        var count = $('#count').val();
        if (isNaN(count) || count < 1) {
            $('#countError').text('Count must be greater than 0.');
            return;
        }

        var fromDate = $('#fromDate').val();
        var toDate = $('#toDate').val();
        if (!isValidDateFormat(fromDate) || !isValidDateFormat(toDate)) {
            return;
        }

        if (new Date(fromDate) >= new Date(toDate)) {
            $('#dateFromError').text('The \"From\" date must be before the \"To\" date');
            return;
        }

        updateTables();
    }

    function isValidDateFormat(dateString) {
        return true;
    }
</script>